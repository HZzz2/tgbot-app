name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Release - ${{ matrix.platform.os }}
    runs-on: ${{ matrix.platform.os }}
    strategy:
      matrix:
        platform:
          - os: ubuntu-latest
            os-name: linux
            target: x86_64-unknown-linux-gnu
            binary-postfix: ""
            asset-name: linux-amd64
          - os: windows-latest
            os-name: windows
            target: x86_64-pc-windows-msvc
            binary-postfix: ".exe"
            asset-name: windows-amd64
          - os: macos-latest
            os-name: macos
            target: x86_64-apple-darwin
            binary-postfix: ""
            asset-name: darwin-amd64
          # 添加 FreeBSD 支持
          - os: ubuntu-latest  # 我们在 Ubuntu 上使用交叉编译
            os-name: freebsd
            target: x86_64-unknown-freebsd
            binary-postfix: ""
            asset-name: freebsd-amd64

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform.target }}

      # 为 FreeBSD 安装必要的依赖
      - name: Install FreeBSD target dependencies
        if: matrix.platform.os-name == 'freebsd'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-multilib pkg-config
          rustup target add x86_64-unknown-freebsd

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Build Binary
        run: cargo build --release --target ${{ matrix.platform.target }}

      - name: Prepare Release Archive
        shell: bash
        run: |
          # 从 Cargo.toml 读取二进制名称（假设与包名相同）
          BINARY_NAME=$(grep -m1 '^name = ' Cargo.toml | cut -d '"' -f2)
          
          # 创建发布目录
          mkdir release
          
          # 复制二进制文件并重命名
          cp target/${{ matrix.platform.target }}/release/$BINARY_NAME${{ matrix.platform.binary-postfix }} release/
          
          # 复制README和LICENSE等文件（如果存在）
          cp README.md release/ 2>/dev/null || true
          cp LICENSE release/ 2>/dev/null || true
          
          # 创建压缩包
          cd release
          if [[ "${{ matrix.platform.os }}" == "windows-latest" ]]; then
            7z a -tzip "../$BINARY_NAME-${{ matrix.platform.asset-name }}.zip" *
          else
            tar czf "../$BINARY_NAME-${{ matrix.platform.asset-name }}.tar.gz" *
          fi

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{ github.event.repository.name }}-${{ matrix.platform.asset-name }}.*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}